{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentadinhduy/Documents/CAODANGCONGTHUONG/web02/front-end/src/context/UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext(); // ✅ Make sure it's properly initialized\n\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [count, setCount] = useState(0);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      setUser(JSON.parse(storedUser).data);\n    }\n  }, []);\n  // Load cart from sessionStorage on app start\n  useEffect(() => {\n    const storedCart = JSON.parse(sessionStorage.getItem(\"arrayProduct\")) || [];\n    setCart(storedCart);\n    setCount(storedCart.length);\n  }, []);\n\n  // Function to add product to cart\n  const addCart = product => {\n    let updatedCart = [...cart];\n    const existingProduct = updatedCart.find(item => item.id === product.id);\n    if (existingProduct) {\n      existingProduct.quantity += 1; // ✅ Increase quantity if exists\n    } else {\n      updatedCart.push({\n        ...product,\n        quantity: 1\n      }); // ✅ Add new product\n    }\n    sessionStorage.setItem(\"arrayProduct\", JSON.stringify(updatedCart));\n    setCart(updatedCart);\n    setCount(updatedCart.length);\n  };\n  const removeCart = id => {\n    const updatedCart = cart.filter(item => item.id !== id);\n    sessionStorage.setItem(\"arrayProduct\", JSON.stringify(updatedCart));\n    setCart(updatedCart);\n    setCount(updatedCart.length);\n  };\n  const updateCartQuantity = (id, quantity) => {\n    const updatedCart = cart.map(item => item.id === id ? {\n      ...item,\n      quantity: quantity\n    } : item);\n    sessionStorage.setItem(\"arrayProduct\", JSON.stringify(updatedCart));\n    setCart(updatedCart);\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      cart,\n      count,\n      addCart,\n      removeCart,\n      updateCartQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"1XsbFWlOZP+jQQj5yH5ID2r2Lvg=\");\n_c = UserProvider;\nexport { UserContext, UserProvider };\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","cart","setCart","count","setCount","user","setUser","storedUser","localStorage","getItem","JSON","parse","data","storedCart","sessionStorage","length","addCart","product","updatedCart","existingProduct","find","item","id","quantity","push","setItem","stringify","removeCart","filter","updateCartQuantity","map","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nguyentadinhduy/Documents/CAODANGCONGTHUONG/web02/front-end/src/context/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nconst UserContext = createContext(); // ✅ Make sure it's properly initialized\n\nconst UserProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n  const [count, setCount] = useState(0);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      setUser(JSON.parse(storedUser).data);\n    }\n  }, []);\n  // Load cart from sessionStorage on app start\n  useEffect(() => {\n    const storedCart = JSON.parse(sessionStorage.getItem(\"arrayProduct\")) || [];\n    setCart(storedCart);\n    setCount(storedCart.length);\n  }, []);\n\n  // Function to add product to cart\n  const addCart = (product) => {\n    let updatedCart = [...cart];\n    const existingProduct = updatedCart.find((item) => item.id === product.id);\n\n    if (existingProduct) {\n      existingProduct.quantity += 1; // ✅ Increase quantity if exists\n    } else {\n      updatedCart.push({ ...product, quantity: 1 }); // ✅ Add new product\n    }\n\n    sessionStorage.setItem(\"arrayProduct\", JSON.stringify(updatedCart));\n    setCart(updatedCart);\n    setCount(updatedCart.length);\n  };\n\n  const removeCart = (id) => {\n    const updatedCart = cart.filter((item) => item.id !== id);\n    sessionStorage.setItem(\"arrayProduct\", JSON.stringify(updatedCart));\n    setCart(updatedCart);\n    setCount(updatedCart.length);\n  };\n  const updateCartQuantity = (id, quantity) => {\n    const updatedCart = cart.map((item) =>\n      item.id === id ? { ...item, quantity: quantity } : item\n    );\n\n    sessionStorage.setItem(\"arrayProduct\", JSON.stringify(updatedCart));\n    setCart(updatedCart);\n  };\n  return (\n    <UserContext.Provider\n      value={{ user, cart, count, addCart, removeCart, updateCartQuantity }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport { UserContext, UserProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}