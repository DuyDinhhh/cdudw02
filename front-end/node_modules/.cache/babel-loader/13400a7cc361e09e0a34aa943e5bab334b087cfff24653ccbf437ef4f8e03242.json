{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentadinhduy/Documents/CAODANGCONGTHUONG/web02/front-end/src/context/UserContext.js\",\n  _s = $RefreshSig$();\n// import React, { createContext, useState, useEffect } from \"react\";\n\n// const UserContext = createContext(); // ✅ Make sure it's properly initialized\n\n// const UserProvider = ({ children }) => {\n//   const [cart, setCart] = useState([]);\n//   const [count, setCount] = useState(0);\n//   const [user, setUser] = useState({ email: \"\", id: \"\", author: false });\n\n//   // Load cart from sessionStorage on app start\n//   useEffect(() => {\n//     const storedCart = JSON.parse(sessionStorage.getItem(\"arrayProduct\")) || [];\n//     setCart(storedCart);\n//     setCount(storedCart.length);\n//   }, []);\n\n//   // Function to add product to cart\n//   const addCart = (product) => {\n//     let updatedCart = [...cart];\n//     const existingProduct = updatedCart.find((item) => item.id === product.id);\n\n//     if (existingProduct) {\n//       existingProduct.quantity += 1; // ✅ Increase quantity if exists\n//     } else {\n//       updatedCart.push({ ...product, quantity: 1 }); // ✅ Add new product\n//     }\n\n//     sessionStorage.setItem(\"arrayProduct\", JSON.stringify(updatedCart));\n//     setCart(updatedCart);\n//     setCount(updatedCart.length);\n//   };\n\n//   const removeCart = (id) => {\n//     const updatedCart = cart.filter((item) => item.id !== id);\n//     sessionStorage.setItem(\"arrayProduct\", JSON.stringify(updatedCart));\n//     setCart(updatedCart);\n//     setCount(updatedCart.length);\n//   };\n//   const updateCartQuantity = (id, quantity) => {\n//     const updatedCart = cart.map((item) =>\n//       item.id === id ? { ...item, quantity: quantity } : item\n//     );\n\n//     sessionStorage.setItem(\"arrayProduct\", JSON.stringify(updatedCart));\n//     setCart(updatedCart);\n//   };\n//   return (\n//     <UserContext.Provider\n//       value={{ user, cart, count, addCart, removeCart, updateCartQuantity }}\n//     >\n//       {children}\n//     </UserContext.Provider>\n//   );\n// };\n\n// export { UserContext, UserProvider };\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { GET_CART, ADD_TO_CART, REMOVE_FROM_CART } from \"../api/apiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [cart, setCart] = useState([]);\n  const navigate = useNavigate();\n\n  // Load user from localStorage when the app starts\n  useEffect(() => {\n    const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n    if (storedUser) {\n      setUser(storedUser.data);\n    }\n  }, []);\n\n  // Load cart from API on component mount (only if user is logged in)\n  useEffect(() => {\n    if (!(user !== null && user !== void 0 && user.id)) {\n      navigate(\"/login\"); // ✅ Redirect if user is not logged in\n    } else {\n      GET_CART(user.id).then(response => {\n        if (response && response.data) {\n          setCart(response.data);\n        }\n      });\n    }\n  }, [user === null || user === void 0 ? void 0 : user.id, navigate]);\n\n  // ✅ Function to add product to cart\n  const addCart = (product, quantity = 1) => {\n    if (!(user !== null && user !== void 0 && user.id)) {\n      alert(\"Vui lòng đăng nhập để thêm vào giỏ hàng!\");\n      navigate(\"/login\");\n      return;\n    }\n    ADD_TO_CART(product.id, quantity, user.id).then(() => {\n      setCart([...cart, {\n        ...product,\n        quantity\n      }]);\n    });\n  };\n\n  // ✅ Function to remove product from cart\n  const removeCart = productId => {\n    if (!(user !== null && user !== void 0 && user.id)) return;\n    REMOVE_FROM_CART(productId, user.id).then(() => {\n      setCart(cart.filter(item => item.id !== productId));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      cart,\n      addCart,\n      removeCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"QgWbFBE+QDBgmcF02gF2RmXeWb4=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProvider;\nexport { UserContext, UserProvider };\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","GET_CART","ADD_TO_CART","REMOVE_FROM_CART","useNavigate","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","cart","setCart","navigate","storedUser","JSON","parse","localStorage","getItem","data","id","then","response","addCart","product","quantity","alert","removeCart","productId","filter","item","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nguyentadinhduy/Documents/CAODANGCONGTHUONG/web02/front-end/src/context/UserContext.js"],"sourcesContent":["// import React, { createContext, useState, useEffect } from \"react\";\n\n// const UserContext = createContext(); // ✅ Make sure it's properly initialized\n\n// const UserProvider = ({ children }) => {\n//   const [cart, setCart] = useState([]);\n//   const [count, setCount] = useState(0);\n//   const [user, setUser] = useState({ email: \"\", id: \"\", author: false });\n\n//   // Load cart from sessionStorage on app start\n//   useEffect(() => {\n//     const storedCart = JSON.parse(sessionStorage.getItem(\"arrayProduct\")) || [];\n//     setCart(storedCart);\n//     setCount(storedCart.length);\n//   }, []);\n\n//   // Function to add product to cart\n//   const addCart = (product) => {\n//     let updatedCart = [...cart];\n//     const existingProduct = updatedCart.find((item) => item.id === product.id);\n\n//     if (existingProduct) {\n//       existingProduct.quantity += 1; // ✅ Increase quantity if exists\n//     } else {\n//       updatedCart.push({ ...product, quantity: 1 }); // ✅ Add new product\n//     }\n\n//     sessionStorage.setItem(\"arrayProduct\", JSON.stringify(updatedCart));\n//     setCart(updatedCart);\n//     setCount(updatedCart.length);\n//   };\n\n//   const removeCart = (id) => {\n//     const updatedCart = cart.filter((item) => item.id !== id);\n//     sessionStorage.setItem(\"arrayProduct\", JSON.stringify(updatedCart));\n//     setCart(updatedCart);\n//     setCount(updatedCart.length);\n//   };\n//   const updateCartQuantity = (id, quantity) => {\n//     const updatedCart = cart.map((item) =>\n//       item.id === id ? { ...item, quantity: quantity } : item\n//     );\n\n//     sessionStorage.setItem(\"arrayProduct\", JSON.stringify(updatedCart));\n//     setCart(updatedCart);\n//   };\n//   return (\n//     <UserContext.Provider\n//       value={{ user, cart, count, addCart, removeCart, updateCartQuantity }}\n//     >\n//       {children}\n//     </UserContext.Provider>\n//   );\n// };\n\n// export { UserContext, UserProvider };\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { GET_CART, ADD_TO_CART, REMOVE_FROM_CART } from \"../api/apiService\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst UserContext = createContext();\n\nconst UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [cart, setCart] = useState([]);\n  const navigate = useNavigate();\n\n  // Load user from localStorage when the app starts\n  useEffect(() => {\n    const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n    if (storedUser) {\n      setUser(storedUser.data);\n    }\n  }, []);\n\n  // Load cart from API on component mount (only if user is logged in)\n  useEffect(() => {\n    if (!user?.id) {\n      navigate(\"/login\"); // ✅ Redirect if user is not logged in\n    } else {\n      GET_CART(user.id).then((response) => {\n        if (response && response.data) {\n          setCart(response.data);\n        }\n      });\n    }\n  }, [user?.id, navigate]);\n\n  // ✅ Function to add product to cart\n  const addCart = (product, quantity = 1) => {\n    if (!user?.id) {\n      alert(\"Vui lòng đăng nhập để thêm vào giỏ hàng!\");\n      navigate(\"/login\");\n      return;\n    }\n\n    ADD_TO_CART(product.id, quantity, user.id).then(() => {\n      setCart([...cart, { ...product, quantity }]);\n    });\n  };\n\n  // ✅ Function to remove product from cart\n  const removeCart = (productId) => {\n    if (!user?.id) return;\n\n    REMOVE_FROM_CART(productId, user.id).then(() => {\n      setCart(cart.filter((item) => item.id !== productId));\n    });\n  };\n\n  return (\n    <UserContext.Provider value={{ user, cart, addCart, removeCart }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport { UserContext, UserProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}