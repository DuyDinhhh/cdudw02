{"ast":null,"code":"// import axios from \"axios\";\n// let API_URL = \"http://localhost:8080/api\";\n// export function callApi(endpoint, method = 'GET', body) {\n//     return axios({\n//         method,\n//         url: `${API_URL}/${endpoint}`,\n//         data: body,\n//     }).catch(e => {\n//         console.log(e)\n//     })\n// }\n// export function GET_ALL_PRODUCTS(endpoint) {\n//     return callApi(endpoint, \"GET\");\n// }\n// export function GET_PRODUCT_ID(endpoint, id) {\n//     return callApi(endpoint + \"/\" + id, \"GET\");\n// }\n// export function POST_ADD_PRODUCT(endpoint, data) {\n//     return callApi(endpoint, \"POST\", data);\n// }\n// export function PUT_EDIT_PRODUCT(endpoint, data) {\n//     return callApi(endpoint, \"PUT\", data);\n// }\n// export function DELETE_PRODUCT_ID(endpoint) {\n//     return callApi(endpoint, \"DELETE\");\n// }\n// export function GET_ALL_CATEGORIES(endpoint) {\n//     return callApi(endpoint, \"GET\");\n// }\n\n// export function GET_CATEGORY_ID(endpoint, id) {\n//     return callApi(endpoint + \"/\" + id, \"GET\");\n// }\n// export function GET_USER(endpoint, data) {\n//     return callApi(endpoint, \"POST\", data);\n// }\n\n// export function GET_USER_ID(endpoint, id) {\n//     return callApi(endpoint + \"/\" + id, \"GET\");\n// }\n\n// export function GET_ALL(endpoint) {\n//     return callApi(endpoint, \"GET\");\n// }\n// export function GET_PRODUCT_RANDOM(endpoint) {\n//     return callApi(endpoint, \"GET\");\n// }\n\n// export function POST_ADD_ORDER(endpoint, data) {\n//     return callApi(endpoint, \"POST\", data);\n// }\n\n// export function POST_ADD_ORDERDTAIL(endpoint, data) {\n//     return callApi(endpoint, \"POST\", data);\n// }\n\n// export function POST_ADD_USER(endpoint, data) {\n//     return callApi(endpoint, \"POST\", data);\n// }\nimport axios from \"axios\";\n\n// Base URLs matching Spring Boot microservices\nconst PRODUCT_API_URL = \"http://localhost:8810\";\nconst RECOMMENDATION_API_URL = \"http://localhost:8812\";\nexport function callApi(endpoint, method = \"GET\", body, baseUrl = PRODUCT_API_URL) {\n  return axios({\n    method,\n    url: `${baseUrl}/${endpoint}`,\n    data: body\n  }).catch(e => {\n    console.log(e);\n  });\n}\n\n// Product APIs (Product Catalog Service - Port 8810)\nexport function GET_ALL_PRODUCTS() {\n  return callApi(\"products\", \"GET\");\n}\n_c = GET_ALL_PRODUCTS;\nexport function GET_PRODUCT_ID(id) {\n  return callApi(`products/${id}`, \"GET\");\n}\n_c2 = GET_PRODUCT_ID;\nexport function POST_ADD_PRODUCT(data) {\n  return callApi(\"admin/products\", \"POST\", data);\n}\n_c3 = POST_ADD_PRODUCT;\nexport function PUT_EDIT_PRODUCT(data) {\n  return callApi(\"admin/products\", \"PUT\", data);\n}\n_c4 = PUT_EDIT_PRODUCT;\nexport function DELETE_PRODUCT_ID(id) {\n  return callApi(`admin/products/${id}`, \"DELETE\");\n}\n\n// Category APIs (Assuming an endpoint for categories exists)\n_c5 = DELETE_PRODUCT_ID;\nexport function GET_ALL_CATEGORIES() {\n  return callApi(\"categories\", \"GET\");\n}\n_c6 = GET_ALL_CATEGORIES;\nexport function GET_CATEGORY_ID(id) {\n  return callApi(`categories/${id}`, \"GET\");\n}\n\n// User APIs\n_c7 = GET_CATEGORY_ID;\nexport function GET_USER(data) {\n  return callApi(\"users\", \"POST\", data);\n}\n_c8 = GET_USER;\nexport function GET_USER_ID(id) {\n  return callApi(`users/${id}`, \"GET\");\n}\n\n// Recommendation APIs (Recommendation Service - Port 8812)\n_c9 = GET_USER_ID;\nexport function GET_RECOMMENDATIONS_BY_PRODUCT(productName) {\n  return callApi(`recommendations?name=${productName}`, \"GET\", null, RECOMMENDATION_API_URL);\n}\n_c10 = GET_RECOMMENDATIONS_BY_PRODUCT;\nexport function POST_ADD_RECOMMENDATION(userId, productId, rating) {\n  return callApi(`${userId}/recommendations/${productId}?rating=${rating}`, \"POST\", null, RECOMMENDATION_API_URL);\n}\n_c11 = POST_ADD_RECOMMENDATION;\nexport function DELETE_RECOMMENDATION(id) {\n  return callApi(`recommendations/${id}`, \"DELETE\", null, RECOMMENDATION_API_URL);\n}\n_c12 = DELETE_RECOMMENDATION;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"GET_ALL_PRODUCTS\");\n$RefreshReg$(_c2, \"GET_PRODUCT_ID\");\n$RefreshReg$(_c3, \"POST_ADD_PRODUCT\");\n$RefreshReg$(_c4, \"PUT_EDIT_PRODUCT\");\n$RefreshReg$(_c5, \"DELETE_PRODUCT_ID\");\n$RefreshReg$(_c6, \"GET_ALL_CATEGORIES\");\n$RefreshReg$(_c7, \"GET_CATEGORY_ID\");\n$RefreshReg$(_c8, \"GET_USER\");\n$RefreshReg$(_c9, \"GET_USER_ID\");\n$RefreshReg$(_c10, \"GET_RECOMMENDATIONS_BY_PRODUCT\");\n$RefreshReg$(_c11, \"POST_ADD_RECOMMENDATION\");\n$RefreshReg$(_c12, \"DELETE_RECOMMENDATION\");","map":{"version":3,"names":["axios","PRODUCT_API_URL","RECOMMENDATION_API_URL","callApi","endpoint","method","body","baseUrl","url","data","catch","e","console","log","GET_ALL_PRODUCTS","_c","GET_PRODUCT_ID","id","_c2","POST_ADD_PRODUCT","_c3","PUT_EDIT_PRODUCT","_c4","DELETE_PRODUCT_ID","_c5","GET_ALL_CATEGORIES","_c6","GET_CATEGORY_ID","_c7","GET_USER","_c8","GET_USER_ID","_c9","GET_RECOMMENDATIONS_BY_PRODUCT","productName","_c10","POST_ADD_RECOMMENDATION","userId","productId","rating","_c11","DELETE_RECOMMENDATION","_c12","$RefreshReg$"],"sources":["/Users/nguyentadinhduy/Documents/CAODANGCONGTHUONG/web02/front-end/src/api/apiService.js"],"sourcesContent":["// import axios from \"axios\";\n// let API_URL = \"http://localhost:8080/api\";\n// export function callApi(endpoint, method = 'GET', body) {\n//     return axios({\n//         method,\n//         url: `${API_URL}/${endpoint}`,\n//         data: body,\n//     }).catch(e => {\n//         console.log(e)\n//     })\n// }\n// export function GET_ALL_PRODUCTS(endpoint) {\n//     return callApi(endpoint, \"GET\");\n// }\n// export function GET_PRODUCT_ID(endpoint, id) {\n//     return callApi(endpoint + \"/\" + id, \"GET\");\n// }\n// export function POST_ADD_PRODUCT(endpoint, data) {\n//     return callApi(endpoint, \"POST\", data);\n// }\n// export function PUT_EDIT_PRODUCT(endpoint, data) {\n//     return callApi(endpoint, \"PUT\", data);\n// }\n// export function DELETE_PRODUCT_ID(endpoint) {\n//     return callApi(endpoint, \"DELETE\");\n// }\n// export function GET_ALL_CATEGORIES(endpoint) {\n//     return callApi(endpoint, \"GET\");\n// }\n\n// export function GET_CATEGORY_ID(endpoint, id) {\n//     return callApi(endpoint + \"/\" + id, \"GET\");\n// }\n// export function GET_USER(endpoint, data) {\n//     return callApi(endpoint, \"POST\", data);\n// }\n\n// export function GET_USER_ID(endpoint, id) {\n//     return callApi(endpoint + \"/\" + id, \"GET\");\n// }\n\n// export function GET_ALL(endpoint) {\n//     return callApi(endpoint, \"GET\");\n// }\n// export function GET_PRODUCT_RANDOM(endpoint) {\n//     return callApi(endpoint, \"GET\");\n// }\n\n// export function POST_ADD_ORDER(endpoint, data) {\n//     return callApi(endpoint, \"POST\", data);\n// }\n\n// export function POST_ADD_ORDERDTAIL(endpoint, data) {\n//     return callApi(endpoint, \"POST\", data);\n// }\n\n// export function POST_ADD_USER(endpoint, data) {\n//     return callApi(endpoint, \"POST\", data);\n// }\nimport axios from \"axios\";\n\n// Base URLs matching Spring Boot microservices\nconst PRODUCT_API_URL = \"http://localhost:8810\";\nconst RECOMMENDATION_API_URL = \"http://localhost:8812\";\n\nexport function callApi(\n  endpoint,\n  method = \"GET\",\n  body,\n  baseUrl = PRODUCT_API_URL\n) {\n  return axios({\n    method,\n    url: `${baseUrl}/${endpoint}`,\n    data: body,\n  }).catch((e) => {\n    console.log(e);\n  });\n}\n\n// Product APIs (Product Catalog Service - Port 8810)\nexport function GET_ALL_PRODUCTS() {\n  return callApi(\"products\", \"GET\");\n}\n\nexport function GET_PRODUCT_ID(id) {\n  return callApi(`products/${id}`, \"GET\");\n}\n\nexport function POST_ADD_PRODUCT(data) {\n  return callApi(\"admin/products\", \"POST\", data);\n}\n\nexport function PUT_EDIT_PRODUCT(data) {\n  return callApi(\"admin/products\", \"PUT\", data);\n}\n\nexport function DELETE_PRODUCT_ID(id) {\n  return callApi(`admin/products/${id}`, \"DELETE\");\n}\n\n// Category APIs (Assuming an endpoint for categories exists)\nexport function GET_ALL_CATEGORIES() {\n  return callApi(\"categories\", \"GET\");\n}\n\nexport function GET_CATEGORY_ID(id) {\n  return callApi(`categories/${id}`, \"GET\");\n}\n\n// User APIs\nexport function GET_USER(data) {\n  return callApi(\"users\", \"POST\", data);\n}\n\nexport function GET_USER_ID(id) {\n  return callApi(`users/${id}`, \"GET\");\n}\n\n// Recommendation APIs (Recommendation Service - Port 8812)\nexport function GET_RECOMMENDATIONS_BY_PRODUCT(productName) {\n  return callApi(\n    `recommendations?name=${productName}`,\n    \"GET\",\n    null,\n    RECOMMENDATION_API_URL\n  );\n}\n\nexport function POST_ADD_RECOMMENDATION(userId, productId, rating) {\n  return callApi(\n    `${userId}/recommendations/${productId}?rating=${rating}`,\n    \"POST\",\n    null,\n    RECOMMENDATION_API_URL\n  );\n}\n\nexport function DELETE_RECOMMENDATION(id) {\n  return callApi(\n    `recommendations/${id}`,\n    \"DELETE\",\n    null,\n    RECOMMENDATION_API_URL\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}