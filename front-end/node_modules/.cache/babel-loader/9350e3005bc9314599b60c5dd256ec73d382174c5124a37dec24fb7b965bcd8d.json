{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentadinhduy/Documents/CAODANGCONGTHUONG/web02/front-end/src/layouts/Home.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { GET_ALL_PRODUCTS } from \"../api/apiService\";\n// import Slide from \"../pages/home2/Slide\";\n\n// function Home() {\n//   const [products, setProducts] = useState([]);\n//   const [cart, setCart] = useState([]); // State to store cart items\n\n//   // Fetch products when the component mounts\n//   useEffect(() => {\n//     GET_ALL_PRODUCTS()\n//       .then((allProducts) => {\n//         if (allProducts.length > 0) {\n//           console.log(allProducts);\n//           setProducts(allProducts);\n//         }\n//       })\n//       .catch((error) => console.error(\"Error fetching products:\", error));\n//   }, []);\n\n//   // Function to handle adding product to the cart\n//   const addToCart = (product) => {\n//     setCart([...cart, product]); // Add product to cart state\n//     alert(`${product.productName} added to cart!`);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <Slide />\n//       <h2 className=\"text-center\">Products</h2>\n//       <div className=\"row\">\n//         {products.length > 0 ? (\n//           products.map((product) => (\n//             <div key={product.id} className=\"col-lg-3 col-md-4 col-sm-6 mb-4\">\n//               {/* Each product takes 3 columns (lg) for 4 items per row */}\n//               <div className=\"card\">\n//                 {/* Render product image */}\n//                 <img\n//                   src={`/images/${product.image}`} // Ensure correct path for images\n//                   className=\"card-img-top\"\n//                   alt={product.productName}\n//                   style={{ height: \"200px\", objectFit: \"contain\" }}\n//                 />\n//                 <div className=\"card-body\">\n//                   <h5 className=\"card-title\">{product.productName}</h5>\n//                   <p className=\"card-text\">\n//                     <strong>Price:</strong> ${product.price}\n//                   </p>\n//                   <p className=\"card-text\">\n//                     <strong>Category:</strong> {product.category}\n//                   </p>\n//                   <p className=\"card-text\">\n//                     <strong>Availability:</strong>{\" \"}\n//                     {product.availability ? \" Yes\" : \"Out of stock\"}\n//                   </p>\n//                   {/* Add to Cart Button */}\n//                   <button\n//                     className=\"btn btn-primary mt-2\"\n//                     onClick={() => addToCart(product)}\n//                     disabled={!product.availability} // Disable if out of stock\n//                   >\n//                     {product.availability ? \"Add to Cart\" : \"Out of Stock\"}\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p className=\"text-center\">No products available.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Home;\nimport React, { useEffect, useState } from \"react\";\nimport { GET_ALL_PRODUCTS } from \"../api/apiService\";\nimport Slide from \"../pages/home2/Slide\";\nimport ProductCard from \"../components/ProductCard\"; // ✅ Import ProductCard\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [products, setProducts] = useState([]);\n\n  // Fetch products when the component mounts\n  useEffect(() => {\n    GET_ALL_PRODUCTS().then(allProducts => {\n      if (allProducts.length > 0) {\n        console.log(allProducts);\n        setProducts(allProducts);\n      }\n    }).catch(error => console.error(\"Error fetching products:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Slide, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"S\\u1EA3n ph\\u1EA9m\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: products.length > 0 ? products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n        product: product\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: \"Kh\\xF4ng c\\xF3 s\\u1EA3n ph\\u1EA9m.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","GET_ALL_PRODUCTS","Slide","ProductCard","jsxDEV","_jsxDEV","Home","_s","products","setProducts","then","allProducts","length","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","id","_c","$RefreshReg$"],"sources":["/Users/nguyentadinhduy/Documents/CAODANGCONGTHUONG/web02/front-end/src/layouts/Home.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { GET_ALL_PRODUCTS } from \"../api/apiService\";\n// import Slide from \"../pages/home2/Slide\";\n\n// function Home() {\n//   const [products, setProducts] = useState([]);\n//   const [cart, setCart] = useState([]); // State to store cart items\n\n//   // Fetch products when the component mounts\n//   useEffect(() => {\n//     GET_ALL_PRODUCTS()\n//       .then((allProducts) => {\n//         if (allProducts.length > 0) {\n//           console.log(allProducts);\n//           setProducts(allProducts);\n//         }\n//       })\n//       .catch((error) => console.error(\"Error fetching products:\", error));\n//   }, []);\n\n//   // Function to handle adding product to the cart\n//   const addToCart = (product) => {\n//     setCart([...cart, product]); // Add product to cart state\n//     alert(`${product.productName} added to cart!`);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <Slide />\n//       <h2 className=\"text-center\">Products</h2>\n//       <div className=\"row\">\n//         {products.length > 0 ? (\n//           products.map((product) => (\n//             <div key={product.id} className=\"col-lg-3 col-md-4 col-sm-6 mb-4\">\n//               {/* Each product takes 3 columns (lg) for 4 items per row */}\n//               <div className=\"card\">\n//                 {/* Render product image */}\n//                 <img\n//                   src={`/images/${product.image}`} // Ensure correct path for images\n//                   className=\"card-img-top\"\n//                   alt={product.productName}\n//                   style={{ height: \"200px\", objectFit: \"contain\" }}\n//                 />\n//                 <div className=\"card-body\">\n//                   <h5 className=\"card-title\">{product.productName}</h5>\n//                   <p className=\"card-text\">\n//                     <strong>Price:</strong> ${product.price}\n//                   </p>\n//                   <p className=\"card-text\">\n//                     <strong>Category:</strong> {product.category}\n//                   </p>\n//                   <p className=\"card-text\">\n//                     <strong>Availability:</strong>{\" \"}\n//                     {product.availability ? \" Yes\" : \"Out of stock\"}\n//                   </p>\n//                   {/* Add to Cart Button */}\n//                   <button\n//                     className=\"btn btn-primary mt-2\"\n//                     onClick={() => addToCart(product)}\n//                     disabled={!product.availability} // Disable if out of stock\n//                   >\n//                     {product.availability ? \"Add to Cart\" : \"Out of Stock\"}\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p className=\"text-center\">No products available.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Home;\nimport React, { useEffect, useState } from \"react\";\nimport { GET_ALL_PRODUCTS } from \"../api/apiService\";\nimport Slide from \"../pages/home2/Slide\";\nimport ProductCard from \"../components/ProductCard\"; // ✅ Import ProductCard\n\nfunction Home() {\n  const [products, setProducts] = useState([]);\n\n  // Fetch products when the component mounts\n  useEffect(() => {\n    GET_ALL_PRODUCTS()\n      .then((allProducts) => {\n        if (allProducts.length > 0) {\n          console.log(allProducts);\n          setProducts(allProducts);\n        }\n      })\n      .catch((error) => console.error(\"Error fetching products:\", error));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <Slide />\n      <h2 className=\"text-center\">Sản phẩm</h2>\n      <div className=\"row\">\n        {products.length > 0 ? (\n          products.map((product) => (\n            <ProductCard key={product.id} product={product} />\n          ))\n        ) : (\n          <p className=\"text-center\">Không có sản phẩm.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,QAAQ,mBAAmB;AACpD,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,WAAW,MAAM,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAD,SAAS,CAAC,MAAM;IACdE,gBAAgB,CAAC,CAAC,CACfS,IAAI,CAAEC,WAAW,IAAK;MACrB,IAAIA,WAAW,CAACC,MAAM,GAAG,CAAC,EAAE;QAC1BC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;QACxBF,WAAW,CAACE,WAAW,CAAC;MAC1B;IACF,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBb,OAAA,CAACH,KAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACTjB,OAAA;MAAIY,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzCjB,OAAA;MAAKY,SAAS,EAAC,KAAK;MAAAC,QAAA,EACjBV,QAAQ,CAACI,MAAM,GAAG,CAAC,GAClBJ,QAAQ,CAACe,GAAG,CAAEC,OAAO,iBACnBnB,OAAA,CAACF,WAAW;QAAkBqB,OAAO,EAAEA;MAAQ,GAA7BA,OAAO,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAClD,CAAC,gBAEFjB,OAAA;QAAGY,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACjD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACf,EAAA,CA9BQD,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAgCb,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}